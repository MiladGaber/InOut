
@inject Microsoft.AspNetCore.Identity.SignInManager<InOut.Models.ApplicationUser> signInManager

@if (signInManager.IsSignedIn(User))
{
    <form method="post" asp-action="LogOff" asp-controller="Account" id="LogOutForm">
        <ul class="nav navbar-nav">
            <li class="text-white nav-link">Hello , @User.Identity.Name</li>
            <li class="nav-link"><a class="text-white"  href="javascript:document.getElementById('LogOutForm').submit()">Log Off</a></li>
        </ul>
    </form>

}
else
{
    <ul class="nav navbar-nav">

        <li class="nav-item"><a class="nav-link text-white" id="registerLink" asp-area="" asp-controller="Account" asp-action="Register">Register</a></li>
        <li class="nav-item"><a class="nav-link text-white" id="loginLink" asp-area="" asp-controller="Account" asp-action="Login">Login</a></li>

    </ul>
}


@*<li>@Html.ActionLink("Sign Up","Register","Account",routeValues:null, htmlAttributes:new { id="registerLink"})</li>
    <li>@Html.ActionLink("Sign In","Login","Account",routeValues:null, htmlAttributes:new { id="loginLink"})</li>*@